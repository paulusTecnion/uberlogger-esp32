image: espressif/idf:v5.0.1

stages:
  - build
  - create_release

build_code:
  stage: build
  script:
    # - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC=y/d' sdkconfig
    # - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC_RX_BUF_SIZE=64/d' sdkconfig

    - idf.py build
    - |
      VERSION=$(grep 'static const char SW_VERSION\[\]' main/sysinfo.h | awk -F '"' '{print $2}' | awk -F '_' '{print $1}')
      if [ "$CI_COMMIT_REF_NAME" != "master" ]; then
          VERSION="dirty_${VERSION}"
      fi
      echo "VERSION=${VERSION}" >> build_vars
    - |
      esptool.py --chip esp32s2 merge_bin --output ./firmware.bin --flash_mode dio --flash_freq 80m --flash_size 4MB \
      0x1000 build/bootloader/bootloader.bin \
      0x8000 build/partition_table/partition-table.bin \
      0xf000 build/ota_data_initial.bin \
      0x20000 build/uberlogger-esp32.bin \
      0x27c000 build/www.bin
    - mv build/uberlogger-esp32.bin ./ota_main.bin
    - mv build/www.bin ./ota_filesystem.bin

  artifacts:
    name: ${VERSION}
    paths:
      - ota_main.bin
      - ota_filesystem.bin
      - firmware.bin
      - build_vars

create_release:
  stage: create_release
  script:
    - source build_vars
    - git config --global user.name "ci-cd"
    - git config --global user.email "ci@cd.com"
    # Don't trigger pipeline again:
    # -o ci.skip is not well known Gitlab Git option which allows skipping new CI.
    # Without ci.skip option CI would be triggered recursively by tag push.
    #
    # - git push origin v1.9d --force -o ci.skip
    - git tag $VERSION
    - git push https://oauth2:${GITLAB_PRIVATE_TOKEN}@gitlab.com/uberlogger/uberlogger-esp32.git --tags -o ci.skip
    #https://gitlab.com/uberlogger/uberlogger-esp32/-/jobs/5041432763/artifacts/download
    - ARTIFACT_LINK="https://gitlab.com/uberlogger/uberlogger-esp32/-/jobs/artifacts/${VERSION}/download?job=build_code"
    - |
      curl --header "PRIVATE-TOKEN: ${GITLAB_PRIVATE_TOKEN}" -X POST "https://gitlab.com/api/v4/projects/39465634/releases" \
      -d "name=$VERSION" \
      -d "tag_name=$VERSION" \
      -d "description=Release version $VERSION" \
      -d "assets[links][][name]=Artifacts" \
      -d "assets[links][][url]=$ARTIFACT_LINK"
  dependencies:
    - build_code
  only:
    - master
