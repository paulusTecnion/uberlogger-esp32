image: espressif/idf:v5.0.1

stages:
  - update_version
  - build
  - create_release

update_version:
  stage: update_version
  only:
    - master
  script:
    - sed -i '/MINOR = /s/\(MINOR = \)\([0-9]\+\)/echo "\1$((\2 + 1))"/e' update_version.py
    - python3 update_version.py
    - |
      VERSION=$(grep 'static const char SW_VERSION\[\]' main/sysinfo.h | awk -F '"' '{print $2}' | awk -F '_' '{print $1}')
      if [ "$CI_COMMIT_REF_NAME" != "master" ]; then
          VERSION="dirty_${VERSION}"
      fi
      echo "VERSION=${VERSION}" >> build_vars
    - git config --global user.name "ci-cd"
    - git config --global user.email "ci@cd.com"
    - git add update_version.py
    - git commit -m "Updated release version to ${VERSION}"
    # - git push https://oauth2:${GITLAB_PRIVATE_TOKEN}@gitlab.com/uberlogger/uberlogger-esp32.git HEAD -o ci.skip
    # - git push origin HEAD:master
    - git push https://oauth2:${GITLAB_PRIVATE_TOKEN}@gitlab.com/uberlogger/uberlogger-esp32.git HEAD:master -o ci.skip
build_code:
  stage: build
  script:
    - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC=y/d' sdkconfig
    - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC_RX_BUF_SIZE=64/d' sdkconfig

    - idf.py build
    - |
      VERSION=$(grep 'static const char SW_VERSION\[\]' main/sysinfo.h | awk -F '"' '{print $2}' | awk -F '_' '{print $1}')
      if [ "$CI_COMMIT_REF_NAME" != "master" ]; then
          VERSION="dirty_${VERSION}"
      fi
      echo "VERSION=${VERSION}" >> build_vars

    - mv build/uberlogger-esp32.bin build/ota_main.bin
    - mv build/www.bin build/ota_filesystem.bin
  artifacts:
    name: ${VERSION}
    paths:
      - build/ota_main.bin
      - build/ota_filesystem.bin
      - build_vars

create_release:
  stage: create_release
  script:
    - source build_vars
    - git config --global user.name "ci-cd"
    - git config --global user.email "ci@cd.com"
    # Don't trigger pipeline again:
    # -o ci.skip is not well known Gitlab Git option which allows skipping new CI.
    # Without ci.skip option CI would be triggered recursively by tag push.
    #
    # - git push origin v1.9d --force -o ci.skip
    - git tag $VERSION
    - git push https://oauth2:${GITLAB_PRIVATE_TOKEN}@gitlab.com/uberlogger/uberlogger-esp32.git --tags -o ci.skip
    #https://gitlab.com/uberlogger/uberlogger-esp32/-/jobs/5041432763/artifacts/download
    - ARTIFACT_LINK="https://gitlab.com/uberlogger/uberlogger-esp32/-/jobs/artifacts/${VERSION}/download?job=build_code"
    - |
      curl --header "PRIVATE-TOKEN: ${GITLAB_PRIVATE_TOKEN}" -X POST "https://gitlab.com/api/v4/projects/39465634/releases" \
      -d "name=$VERSION" \
      -d "tag_name=$VERSION" \
      -d "description=Release version $VERSION" \
      -d "assets[links][][name]=Artifacts" \
      -d "assets[links][][url]=$ARTIFACT_LINK"
  dependencies:
    - build_code
  only:
    - master
