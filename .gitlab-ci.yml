image: espressif/idf:v5.0.1

stages:
  - update_version
  - build
  - create_artifact_zip
  - create_release

update_version:
  stage: update_version
  only:
    - master
  script:
    - sed -i '/MINOR = /s/\(MINOR = \)\([0-9]\+\)/echo "\1$((\2 + 1))"/e' update_version.py

build_code:
  stage: build
  script:
    - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC=y/d' sdkconfig
    - sed -i '/CONFIG_ESP_CONSOLE_USB_CDC_RX_BUF_SIZE=64/d' sdkconfig
    - idf.py build
    - |
      VERSION=$(grep 'static const char SW_VERSION\[\]' main/sysinfo.h | awk -F '"' '{print $2}' | awk -F '_' '{print $1}')
      if [ "$CI_COMMIT_REF_NAME" != "master" ]; then
          VERSION="dirty_${VERSION}"
      fi
      echo "VERSION=${VERSION}" >> build_vars
  artifacts:
    paths:
      - build/uberlogger-esp32.bin
      - build/www.bin
      - build_vars

create_artifact_zip:
  stage: create_artifact_zip
  script:
    - source build_vars
    - mv build/uberlogger-esp32.bin build/ota_main.bin
    - mv build/www.bin build/ota_filesystem.bin
    - zip build/${VERSION}_artifacts.zip build/ota_main.bin build/ota_filesystem.bin
    #- mv artifacts.zip ${VERSION}_artifacts.zip
    - ls -l build/${VERSION}_artifacts.zip || echo "${VERSION}_artifacts.zip not found"
  dependencies:
    - build_code
  artifacts:
    paths:
      - build/${VERSION}_artifacts.zip

create_release:
  stage: create_release
  script:
    - source build_vars
    - |
      git tag $VERSION
      git push origin $VERSION
      curl --header "PRIVATE-TOKEN: glptt-751479be01e5f5db4fd3961eada69c2b926b4b98" -X POST "https://gitlab.com/api/v4/projects/39465634/releases" -d "name=$VERSION" -d "tag_name=$VERSION" -d "description=Release version $VERSION"
  dependencies:
    - build_code
  only:
    - master
